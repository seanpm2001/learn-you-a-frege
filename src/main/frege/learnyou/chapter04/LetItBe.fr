module learnyou.chapter04.LetItBe where

import frege.prelude.Math

cylinder :: (Floating a) => a -> a -> a
cylinder r h =
    let sideArea = 2 * pi * r * h
        topArea = pi * r ^ 2
    in  sideArea + 2 * topArea

calcBmis :: (Real a) => [(a, a)] -> [a]
calcBmis xs = [ bmi | (w, h) <- xs, bmi = w / h ^ 2, bmi >= 25.0 ]

main _ = do
    println $ 4 * (let a = 9 in a + 1) + 2
    println $ [let square x = x * x in (square 5, square 3, square 2)]
    println $
        ( let a = 100; b = 200; c = 300 in a * b * c
        , let foo = "Hey "; bar = "there!" in  foo ++ bar
        )
    println $ (let (a, b, c) = (1, 2, 3) in a + b + c) * 100
